# Init config for the module
title: STOUT Log Landing Page
group: Common Examples

# Before module form is shown in the UI, setup command is called. Usually
# this is used to communicate with the UI via Unix socket (see "callback")
# and pre-load data to the widgets.
#
# NOTE: This is a full command, so arguments are also allowed.
setup: example-module.sh --setup

# Landing widget screen. This is a window that shows module runtime
# and user knows what is currently happening, and its results at the end.
#
# Supported: "logger", "progress" and "list"
#
# Logger
# Essentially, it is a STDOUT terminal-like text dumper with a title
# on top and a status bar on the bottom. In between is an STDOUT output
# of the target commands.
#
# Progress
# This is just a progress-bar with a short message on top of it that
# roughly says what is happening right now. Useful if a module has to
# execute lots of subcommands, but their output does not matter.
#
# List
# It is like a progress, but has also list of done things and things
# that are still to do.
landing: logger

# Condition is to either run a module or show a nag-screen
# if condition is not met.
conditions:
  - all-present:
      - /usr/bin/bash
      - /bin/ls
    message: "SDK is ready to use!"

  - all-absent:
      - /dev/darth-vader
      - /dev/luke
    message: "Darth Vader is around!!"

# Arguments to the module calls.
# List of all commands in a batch. They are executed in
# the order they order are described in this very list.
commands:
  # Path to the executable
  # If path does not start with the slash "/" then the path is
  # relative to the module location.
  - path: example-module.sh
    title: Prepare Environment

    # Flags are just passed as is, directly.
    # For dynamic, use "toggle"
    flags:
      - -c
      - --type="great"

    # Choice renders a list of selectable choices
    args:
      - type: dropdown
        name: --path
        label: Location
        options:
          # Described in this form:
          # - [<LABEL> <TYPE (string|bool) [VALUE]]
          # If no value provided, an entry box will be placed
          - ["Local area", string, "/usr/local/example"]
          - ["Optional area", string, "/opt/example"]

      # Dropdown renders as a dropdown list
      - type: list
        name: --arch
        label: Architecture
        options:
          # Dropdown has no entry field
          - ["x86_64", string, "x86_64"]
          - ["aarch64", string, "aarch64"]

      - type: text
        name: --name
        label: Some name
        attributes:
          - skip-empty
        options:
          # Text entry has only one value:
          # <DEFAULT_TEXT>
          # If more specified, they will be just ignored
          - ["Default text"]

      - type: toggle
        name: --log-level
        label: Log Level
        options:
          # It is basically a boolean flag that will be prepended, if toggle is selected
          - ["debug", bool, yes]

      - type: toggle
        name: --verbose
        label: Verbose Mode
        options:
          # Empty value will render this toggle just as a regular flagg, added if checked
          - ["", bool, yes]

  - path: /opt/ebcl-sdk/modules/sdk-post-setup.sh
    title: Post-Setup
    # Option will add a yes/no with the question below
    option: "Would you like to post-setup SDK now?"
